@page
@using WebApplicationConges.Data
@model WebApplicationConges.Pages.AdminModel
@{
    ViewData["Title"] = "Administration";
}
<h3>Administration</h3>
<div asp-validation-summary="All" class="text-danger"></div>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#config">Configuration</a></li>
    <li><a data-toggle="tab" href="#services">Services</a></li>
    <li><a data-toggle="tab" href="#users">Utilisateurs</a></li>    
    <li><a data-toggle="tab" href="#bdd">BDD</a></li>    
    <li><a data-toggle="tab" href="#clean">Divers</a></li>    
</ul>

<div class="tab-content">
    <div id="config" class="tab-pane fade in active"> 
        <br />
        <form method="post">
            <div class="form-group">
                <label asp-for="MyConfig.AppAdminLogin">Login</label>
                <input asp-for="MyConfig.AppAdminLogin" type="text" class="form-control" placeholder="Login" maxlength="49" readonly />
                <span asp-validation-for="MyConfig.AppAdminLogin" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CurrentPassword">Mot de passe actuel</label>
                <input asp-for="CurrentPassword" class="form-control" placeholder="Mot de passe actuel" maxlength="49" />
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewPassword">Nouveau mot de passe</label>
                <input asp-for="NewPassword" class="form-control" placeholder="Nouveau mot de passe" maxlength="49" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword">Nouveau mot de passe (confirmation)</label>
                <input asp-for="ConfirmPassword" class="form-control" placeholder="Nouveau mot de passe" maxlength="49" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MyConfig.AppAdminEmail">Email</label>
                <input asp-for="MyConfig.AppAdminEmail" type="text" class="form-control" placeholder="Email" maxlength="49" />
                <span asp-validation-for="MyConfig.AppAdminEmail" class="text-danger"></span>
            </div>

            <hr />

            <div class="form-group">
                <label asp-for="MyConfig.Ldap">Ldap</label>
                <input asp-for="MyConfig.Ldap" type="checkbox" class="form-control" style="width: 20px; height: 20px;" />
                <span asp-validation-for="MyConfig.Ldap" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MyConfig.LdapConnectionString">Chaine de connexion</label>
                <input asp-for="MyConfig.LdapConnectionString" type="text" class="form-control" placeholder="Chaine" maxlength="254" />
                <span asp-validation-for="MyConfig.LdapConnectionString" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MyConfig.LdapFilter">Filtre LDAP</label>
                <input asp-for="MyConfig.LdapFilter" type="text" class="form-control" placeholder="Filtre" maxlength="63" />
                <span asp-validation-for="MyConfig.LdapFilter" class="text-danger"></span>
            </div>
                                                
            <button class="btn btn-default" type="submit" asp-page-handler="UpdateConfig">Mettre à jour</button>                            
        </form>        
    </div>

    <div id="services" class="tab-pane fade">
        @if (Model.Services.Count() <= 0)
        {
            <p>Aucun service existant.</p>
            <a asp-page="./Services/Create">Créer un service</a>
        }
        else
        {
            <br />
            <a asp-page="./Services/Create">Créer un service</a>
            <br />
            <form method="post">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Nom</th>
                            <th>Description</th>
                            <th>Manager</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var service in Model.Services)
                        {
                            <tr>
                                <td>@service.Name</td>
                                <td>@service.Description</td>
                                <td>@service.Manager?.User.Name</td>
                                <td>
                                    <a class="btn btn-default" asp-page="./Services/Edit" asp-route-id="@service.Id"><i class="fa fa-edit fa-lg"></i> Editer</a>
                                    <button class="btn btn-default" type="submit" asp-page-handler="DeleteService" asp-route-id="@service.Id"><i class="fa fa-trash-o fa-lg"></i> Supprimer</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>
            <a asp-page="./Services/Create">Créer un service</a>
        }
    </div>

    <div id="users" class="tab-pane fade">
        <br />
        @if (Connect.UserAccess.Instance is Connect.DbConnection)
        {
            <a asp-page="./Users/Create">Gérer les utilisateurs</a>
        }
        @if (Connect.UserAccess.Instance is Connect.LdapConnection)
        {
            <a asp-page="./Users/Import">Gérer les utilisateurs</a>
        }
        <br />
        <form method="post">
            <table class="table">
                <thead>
                    <tr>
                        <th>Nom</th>
                        <th>Email</th>
                        <th>Service</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Users.Count(); i++)
                    {
                        <tr>
                            <td>@Model.Users[i].Name</td>
                            <td>@Model.Users[i].Email</td>
                            <td>@Model.Users[i].Service?.Name</td>
                            <td>
                                <a class="btn btn-default" asp-page="./Users/Edit" asp-route-id="@Model.Users[i].Email"><i class="fa fa-edit fa-lg"></i> Editer</a>
                                <button class="btn btn-default" type="submit" asp-page-handler="DeleteUser" asp-route-id="@Model.Users[i].Email"><i class="fa fa-trash-o fa-lg"></i> Supprimer</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
         @if (Connect.UserAccess.Instance is Connect.DbConnection)
        {
            <a asp-page="./Users/Create">Gérer les utilisateurs</a>
        }
        @if (Connect.UserAccess.Instance is Connect.LdapConnection)
        {
            <a asp-page="./Users/Import">Gérer les utilisateurs</a>
        }
    </div>
            
    <div id="bdd" class="tab-pane fade">
    <br />
    <p>Gestion des sauvegardes de la base de donnée.</p>
    @if (Model.BackupColl.Count() <= 0)
    {
        <br />
        <p>Aucune sauvegarde de la base de donnée réalisée pour le moment</p>
    }
    else
    {
        <form method="post">
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Lien</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int j = 0; j < Model.BackupColl.Count; j++)
                    {
                        <tr>
                            <td>@Model.BackupColl[j].Value.ToString("dd/MM/yyyy HH:mm:ss")</td>
                            <td>
                                <a href="@Model.BackupColl[j].Key" download>@System.IO.Path.GetFileName(Model.BackupColl[j].Key)</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    }

    <br />

        <form method="post" class="form-inline">
            <button class="btn btn-default" type="submit" asp-page-handler="CleanBackup"><i class="fa fa-recycle fa-lg"></i> Purger</button>
            <button class="btn btn-default" type="submit" asp-page-handler="Backup"><i class="fa fa-file-zipper fa-lg"></i>Sauvegarder</button>
        </form>

    </div>    

    <div id="clean" class="tab-pane fade">
        <br />
        @if (Model.FilesCount > 0)
        {
            <p>Il y a @Model.FilesCount fichier(s) à purger.</p>
            <form method="post">
                <button class="btn btn-default" type="submit" asp-page-handler="CleanExport"><i class="fa fa-recycle fa-lg"></i> Purger</button>
            </form>
        }
        else
        {
            <p>Aucun fichier à purger.</p>
        }

        @if (Model.OldAbsenceTemporaires.Count() <= 0)
        {
            <br />
            <p>Aucune absence temporaire à purger</p>
        }
        else
        {
            <br />
            <p>Il y a @Model.OldAbsenceTemporaires.Count() absences temporaires à purger (plus vielles de @Toolkit.IntervalAbsenceTemporaire().TotalDays)</p>
            <form method="post">
                <button class="btn btn-default" type="submit" asp-page-handler="CleanAbsTemp"><i class="fa fa-recycle fa-lg"></i> Purger</button>
            </form>
        }

        @if (Model.OldConges.Count() <= 0)
        {
            <br />
            <p>Aucun congé à purger</p>
        }
        else
        {
            <br />
            <p>Il y a @Model.OldConges.Count() congés à purge (plus vieux de @Toolkit.IntervalCongeOld().TotalDays).</p>
            <form method="post">
                <button class="btn btn-default" type="submit" asp-page-handler="CleanConge"><i class="fa fa-recycle fa-lg"></i> Purger</button>
            </form>
        }        

        <br />
        <p>Envoyer un email pour tester le système SMTP.</p>
        <form method="post">
            <button class="btn btn-default" type="submit" asp-page-handler="TestEmail"><i class="fa fa-envelope fa-lg"></i> Test</button>
        </form>

        <br />
        <p>Remise à zéro du cache.</p>
        <form method="post">
            <button class="btn btn-default" type="submit" asp-page-handler="ResetCache"><i class="fa fa-trash-o fa-lg"></i> Reset</button>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
